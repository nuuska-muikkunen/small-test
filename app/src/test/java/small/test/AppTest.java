/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package small.test;

import org.junit.jupiter.api.Test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.assertj.core.api.Assertions.assertThat;

class AppTest {
    static final String PATH_TO_FIXTURE = "src/test/resources/fixtures/";

    public static String fixture(String nameOfFile) {
//        return Paths.get(PATH_TO_FIXTURE + nameOfFile).toAbsolutePath().normalize();
        return PATH_TO_FIXTURE + nameOfFile;
    }

    public static String fixtureToString(String filePath) throws Exception {
        File file = new File(filePath);
        FileReader fr = new FileReader(file);
        BufferedReader br = new BufferedReader(fr);
        StringBuilder s = new StringBuilder();
        String line;
//        int sum = 0;
//        int i = 0;
        while ((line = br.readLine()) != null) {
//            System.out.println("line " + i + " growing length= " + sum);
//            i += 1;
//            sum += line.length();
            s.append(line).append("\n");
        }
//        System.out.println("total length w/o trim= " + sum);
        return s.substring(0, s.length() - 1).trim();
    }

    public static String fixtureToStringFiles(String filePath) throws Exception {
        var s = Files.readString(Paths.get(filePath).toAbsolutePath().normalize()).trim();
//        var s1 = s.replace("789", "999");
//        var s2 = s1.replace("210", "000");
//        System.out.println("s2 = \n" + s2);
        return s;
    }
    @Test
    public void Test() throws Exception {
        String expected = "0123456789\nabcdfghijk\n9876543210";
        System.out.println("expected length = " + expected.length() + "\n");

        var expected1 = fixtureToStringFiles(fixture("test.txt"));
        System.out.println("expected1 length= " + expected1.length());
        System.out.println("expected1= \n" + expected1);

        var expected2 = fixtureToString(fixture("test.txt"));
        System.out.println("expected2 length = " + expected2.length());
        System.out.println("expected2 = \n" + expected2);

        assertThat(expected2).isEqualTo(expected);
        assertThat(expected1).isEqualTo(expected);
    }
}
