/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package small.test;

import org.junit.jupiter.api.Test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.nio.file.Files;
import java.nio.file.Paths;

import static org.assertj.core.api.Assertions.assertThat;

class AppTest {
    static final String PATH_TO_FIXTURE = "src/test/resources/fixtures/";

    public static String fixture(String nameOfFile) {
//        return Paths.get(PATH_TO_FIXTURE + nameOfFile).toAbsolutePath().normalize();
        return PATH_TO_FIXTURE + nameOfFile;
    }

    public static String fixtureToString(String filePath) throws Exception {
        File file = new File(filePath);
        FileReader fr = new FileReader(file);
        BufferedReader br = new BufferedReader(fr);
        StringBuilder s = new StringBuilder();
        String line;
        while ((line = br.readLine()) != null) {
            s.append(line).append("\n");
        }
        return s.substring(0, s.length() - 1).trim();
    }

    public static String fixtureToStringFiles(String filePath) throws Exception {
        return Files.readString(Paths.get(filePath).toAbsolutePath().normalize());
    }
    @Test
    public void Test() throws Exception {
        String expected = """
                {
                    chars1: [a, b, c]
                  - chars2: [d, e, f]
                  + chars2: false
                  - checked: false
                  + checked: true
                  - default: null
                  + default: [value1, value2]
                  - id: 45
                  + id: null
                  - key1: value1
                  + key2: value2
                    numbers1: [1, 2, 3, 4]
                  - numbers2: [2, 3, 4, 5]
                  + numbers2: [22, 33, 44, 55]
                  - numbers3: [3, 4, 5]
                  + numbers4: [4, 5, 6]
                  + obj1: {nestedKey=value, isNested=true}
                  - setting1: Some value
                  + setting1: Another value
                  - setting2: 200
                  + setting2: 300
                  - setting3: true
                  + setting3: none
                }""";
        System.out.println("expected length = " + expected.length());

        var expected1 = Files.readString(Paths.get(fixture("expected.stylish"))
                .toAbsolutePath().normalize()).trim();
        System.out.println("expected1 length = " + expected1.length());

        var expected2 = fixtureToString(fixture("expected.stylish"));
        System.out.println("expected2 length = " + expected2.length());

        assertThat(expected1).isEqualTo(expected);
        assertThat(expected2).isEqualTo(expected);
    }

}
